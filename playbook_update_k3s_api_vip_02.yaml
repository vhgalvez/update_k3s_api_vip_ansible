---
- name: Reemplazar endpoint API por IP VIP y reiniciar K3s
  hosts: all
  gather_facts: false
  vars:
    kubeconfig_path: /etc/rancher/k3s/k3s.yaml
    vip_address: "10.17.5.10"
  tasks:

    - name: Verificar si existe el archivo k3s.yaml
      ansible.builtin.stat:
        path: "{{ kubeconfig_path }}"
      register: k3s_yaml_status

    - name: Copia de seguridad de k3s.yaml si existe
      ansible.builtin.copy:
        src: "{{ kubeconfig_path }}"
        dest: "{{ kubeconfig_path }}.bak"
        remote_src: yes
      when: k3s_yaml_status.stat.exists

    - name: Reemplazar IP del API server en k3s.yaml por VIP
      ansible.builtin.replace:
        path: "{{ kubeconfig_path }}"
        regexp: 'server: https://[0-9.]+:6443'
        replace: "server: https://{{ vip_address }}:6443"
      when: k3s_yaml_status.stat.exists

    - name: Determinar si el nodo es master (tiene k3s.service)
      ansible.builtin.stat:
        path: /etc/systemd/system/k3s.service
      register: is_master

    - name: Determinar si el nodo es worker (tiene k3s-agent.service)
      ansible.builtin.stat:
        path: /etc/systemd/system/k3s-agent.service
      register: is_worker

    - name: Reiniciar k3s en masters
      ansible.builtin.systemd:
        name: k3s
        state: restarted
        enabled: yes
      when: is_master.stat.exists

    - name: Reiniciar k3s-agent en workers
      ansible.builtin.systemd:
        name: k3s-agent
        state: restarted
        enabled: yes
      when: is_worker.stat.exists

    - name: Esperar 10 segundos para que los servicios levanten
      ansible.builtin.pause:
        seconds: 10

    - name: Verificar acceso al API Server por la VIP (solo en masters)
      ansible.builtin.uri:
        url: "https://{{ vip_address }}:6443/healthz"
        method: GET
        validate_certs: no
        status_code: 200
      when: is_master.stat.exists