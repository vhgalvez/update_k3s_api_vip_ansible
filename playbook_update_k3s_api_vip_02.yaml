---
- name: Actualizar K3s para usar la IP VIP en todos los nodos
  hosts: all
  become: true
  gather_facts: false

  vars:
    vip_ip: "{{ api_vip | default('10.17.5.10') }}"
    kubeconfig_path: "/etc/rancher/k3s/k3s.yaml"
    k3s_service_path: "/etc/systemd/system/k3s.service"

  tasks:

    - name: Cambiar endpoint en kubeconfig a la VIP (todos los nodos si existe)
      raw: |
        if [ -f "{{ kubeconfig_path }}" ]; then
          sed -i 's|server: https://127.0.0.1:6443|server: https://{{ vip_ip }}:6443|' {{ kubeconfig_path }}
        fi

    - name: Añadir --tls-san {{ vip_ip }} en masters si no existe
      raw: |
        grep -q -- "--tls-san {{ vip_ip }}" {{ k3s_service_path }} || \
        sed -i "/ExecStart=/ s|\\(--tls-san [^ ]\\+\\)|\\1 --tls-san {{ vip_ip }}|" {{ k3s_service_path }}
      when: inventory_hostname in groups['masters']

    - name: Eliminar certificados TLS en masters para regeneración con VIP
      raw: |
        rm -rf /var/lib/rancher/k3s/server/tls
        rm -rf /var/lib/rancher/k3s/server/db/etcd-tmp
      when: inventory_hostname in groups['masters']

    - name: Recargar systemd y reiniciar K3s (solo masters)
      raw: |
        systemctl daemon-reexec
        systemctl daemon-reload
        systemctl restart k3s
      when: inventory_hostname in groups['masters']

    - name: Esperar a que API esté disponible por VIP
      raw: |
        for i in $(seq 1 60); do
          curl -k --max-time 1 https://{{ vip_ip }}:6443/version >/dev/null 2>&1 && exit 0
          sleep 1
        done
        echo "❌ La API en {{ vip_ip }}:6443 no respondió en 60s"
      when: inventory_hostname in groups['masters'] | first == inventory_hostname

    - name: Verificar que el kubeconfig usa la VIP (solo si existe)
      raw: |
        if [ -f "{{ kubeconfig_path }}" ]; then
          grep 'server: https://{{ vip_ip }}:6443' "{{ kubeconfig_path }}" || echo "❌ El archivo no fue modificado correctamente"
        else
          echo "⚠️ El archivo {{ kubeconfig_path }} no existe en este nodo"
        fi
      register: check_kubeconfig
      changed_when: false

    - name: Mostrar resultado
      debug:
        var: check_kubeconfig.stdout_lines