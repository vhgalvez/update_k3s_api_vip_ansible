  tasks:
    - name: Asegurar que el kubeconfig apunte a la VIP (solo en masters)
      raw: |
        sed -i 's|server: https://127.0.0.1:6443|server: https://{{ vip_ip }}:6443|' {{ kubeconfig_path }}
      when: inventory_hostname in groups['masters']

    - name: Agregar --tls-san {{ vip_ip }} en masters si no existe
      raw: |
        grep -q -- "--tls-san {{ vip_ip }}" {{ k3s_service_path }} || \
        sed -i "/ExecStart=/ s|\\(--tls-san [^ ]\\+\\)|\\1 --tls-san {{ vip_ip }}|" {{ k3s_service_path }}
      when: inventory_hostname in groups['masters']

    - name: Eliminar certificados TLS para regenerarlos con la nueva VIP
      raw: |
        rm -rf /var/lib/rancher/k3s/server/tls
      when: inventory_hostname in groups['masters']

    - name: Recargar y reiniciar k3s
      raw: |
        systemctl daemon-reexec
        systemctl daemon-reload
        systemctl restart k3s
      when: inventory_hostname in groups['masters']

    - name: Verificar si el archivo k3s.yaml tiene la VIP
      raw: |
        grep 'server: https://{{ vip_ip }}:6443' {{ kubeconfig_path }} || echo "‚ùå El archivo no fue modificado correctamente"
      register: check_kubeconfig
      changed_when: false
      when: inventory_hostname in groups['masters']

    - name: Mostrar resultado de verificacion
      debug:
        var: check_kubeconfig.stdout_lines
      when: inventory_hostname in groups['masters']