- name: Configurar k3s con IP VIP en masters y reiniciar
  hosts: masters
  gather_facts: false
  become: true

  vars:
    vip_ip: "10.17.5.10"

  tasks:
    - name: Verificar si k3s.service existe
      raw: "test -f /etc/systemd/system/k3s.service"
      register: k3s_service_check
      ignore_errors: true

    - name: Hacer backup de k3s.service si existe
      raw: "cp /etc/systemd/system/k3s.service /etc/systemd/system/k3s.service.bak"
      when: k3s_service_check.rc == 0

    - name: Asegurar que --tls-san VIP esté en ExecStart
      raw: "sed -i '/ExecStart=/ s|\\(--tls-san [^ ]*\\)|\1 --tls-san {{ vip_ip }}|' /etc/systemd/system/k3s.service"

    - name: Asegurar que --write-kubeconfig esté presente
      raw: "grep -q -- '--write-kubeconfig' /etc/systemd/system/k3s.service || sed -i '/ExecStart=/ s|\\(--tls-san [^ ]*\\)|\1 --write-kubeconfig /etc/rancher/k3s/k3s.yaml --write-kubeconfig-mode 644|' /etc/systemd/system/k3s.service"

    - name: Ejecutar systemctl daemon-reexec
      raw: "systemctl daemon-reexec"

    - name: Ejecutar systemctl daemon-reload
      raw: "systemctl daemon-reload"

    - name: Reiniciar k3s
      raw: "systemctl restart k3s"

    - name: Reemplazar IP local por IP VIP en k3s.yaml
      raw: "sed -i 's|server: https://127.0.0.1:6443|server: https://{{ vip_ip }}:6443|' /etc/rancher/k3s/k3s.yaml"
      ignore_errors: true

    - name: Esperar 10 segundos para estabilidad
      raw: "sleep 10"

    - name: Validar que el API responde por la VIP con curl
      raw: "curl -sk https://{{ vip_ip }}:6443 || true"