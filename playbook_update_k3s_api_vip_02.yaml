---
- name: Reemplazar endpoint API por IP VIP y reiniciar K3s
  hosts: k8s_cluster
  become: true
  gather_facts: false

  vars:
    vip_ip: "10.17.5.10"
    kubeconfig_path: "/etc/rancher/k3s/k3s.yaml"
    k3s_service_path: "/etc/systemd/system/k3s.service"
    k3s_tls_path: "/var/lib/rancher/k3s/server/tls"

  tasks:
    - name: Asegurar que el kubeconfig apunte a la VIP
      raw: |
        sed -i 's|server: https://127.0.0.1:6443|server: https://{{ vip_ip }}:6443|' {{ kubeconfig_path }}
      when: inventory_hostname in groups['masters'] or inventory_hostname in groups['workers'] or inventory_hostname in groups['storage']

    - name: Agregar --tls-san {{ vip_ip }} en masters si no existe
      raw: |
        grep -q "--tls-san {{ vip_ip }}" {{ k3s_service_path }} || \
        sed -i "/ExecStart=/ s|\\(--tls-san [^ ]\+\)|\1 --tls-san {{ vip_ip }}|" {{ k3s_service_path }}
      when: inventory_hostname in groups['masters']

    - name: Eliminar certificados TLS para regenerarlos con la nueva VIP
      raw: |
        rm -rf {{ k3s_tls_path }}
      when: inventory_hostname in groups['masters']

    - name: Recargar y reiniciar k3s
      raw: |
        systemctl daemon-reexec
        systemctl daemon-reload
        systemctl restart k3s

    - name: Verificar si el archivo k3s.yaml tiene la VIP
      raw: |
        grep 'server: https://{{ vip_ip }}:6443' {{ kubeconfig_path }} || echo "‚ùå El archivo no fue modificado correctamente"
      register: check_kubeconfig
      changed_when: false

    - name: Mostrar resultado de verificacion
      debug:
        var: check_kubeconfig.stdout_lines