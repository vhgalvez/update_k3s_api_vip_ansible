---
- name: Configurar K3s con VIP 10.17.15.10
  hosts: all
  become: true
  gather_facts: false

  vars:
    vip_ip: "10.17.15.10"
    k3s_service_path: "/etc/systemd/system/k3s.service"
    agent_service_path: "/etc/systemd/system/k3s-agent.service"
    kubeconfig_path: "/etc/rancher/k3s/k3s.yaml"
    primer_master: "{{ groups['masters'][0] }}"

  tasks:
    # --- Limpiar procesos huérfanos antes de reiniciar ---
    - name: "🚨 Limpiar procesos huérfanos de containerd-shim"
      raw: |
        ps aux | grep 'containerd-shim' | awk '{print $2}' | xargs kill -9
      when: inventory_hostname in groups['masters']
      ignore_errors: true

    # --- Configurar VIP solo en el primer master (idempotente) ---
    - name: "🖥️ Asignar VIP al primer master"
      raw: |
        if ! ip a show eth0 | grep -q "{{ vip_ip }}"; then
          ip addr add {{ vip_ip }}/24 dev eth0
        fi
      when: inventory_hostname == primer_master

    # --- Añadir TLS SAN de forma segura ---
    - name: "🔐 Agregar VIP a TLS SANs"
      raw: |
        grep -q "{{ vip_ip }}" {{ k3s_service_path }} || sed -i '/ExecStart=/ s/$/ --tls-san {{ vip_ip }}/' {{ k3s_service_path }}
      when: inventory_hostname in groups['masters']

    # --- Eliminar datos antiguos (certificados + etcd) ---
    - name: "🧹 Limpiar datos previos"
      raw: |
        systemctl stop k3s || true
        rm -rf /var/lib/rancher/k3s/server/tls/*
        rm -rf /var/lib/rancher/k3s/server/db/etcd/*
      when: inventory_hostname in groups['masters']

    # --- Actualizar kubeconfig (forzar cambios) ---
    - name: "📄 Corregir kubeconfig"
      raw: |
        sed -i 's|server: .*|server: https://{{ vip_ip }}:6443|' {{ kubeconfig_path }}
      when: inventory_hostname in groups['masters']

    # --- Configurar agentes con reintentos ---
    - name: "🔄 Actualizar endpoint en agentes"
      raw: |
        sed -i 's|--server .*|--server https://{{ vip_ip }}:6443|' {{ agent_service_path }}
      when: inventory_hostname not in groups['masters']
      retries: 3
      delay: 10

    # --- Reiniciar servicios con verificación ---
    - name: "⚡ Reiniciar K3s (masters)"
      raw: |
        systemctl daemon-reload
        systemctl restart k3s
      when: inventory_hostname in groups['masters']
      register: restart_k3s
      until: restart_k3s.rc == 0
      retries: 3
      delay: 10

    - name: "⚡ Reiniciar k3s-agent (workers)"
      raw: |
        systemctl daemon-reload
        systemctl restart k3s-agent
      when: inventory_hostname not in groups['masters']
      register: restart_agent
      until: restart_agent.rc == 0
      retries: 3
      delay: 10

    # --- Verificación crítica ---
    - name: "✅ Validar certificados y API"
      block:
        - name: "🔍 Certificados regenerados"
          raw: |
            [ -f /var/lib/rancher/k3s/server/tls/server-ca.crt ] || exit 1
          when: inventory_hostname in groups['masters']

        - name: "🌐 Testear API VIP"
          raw: |
            curl -k --retry 5 --max-time 3 https://{{ vip_ip }}:6443/version
          when: inventory_hostname == primer_master
      rescue:
        - name: "🚨 Error crítico: Revertir cambios"
          debug:
            msg: "Falló la configuración. Verifique VIP y logs de K3s."